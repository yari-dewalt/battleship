(()=>{"use strict";class e{constructor(){this.board=Array.from({length:10},(()=>Array(10).fill(""))),this.ships=[],this.missedAttacks=[]}placeShip(e,t,a,n){if(this.isValidPlacement(e,t,a,n)){for(let i=0;i<e.length;i++)"horizontal"===n?this.board[t][a+i]=e:this.board[t+i][a]=e;return this.ships.push({ship:e,row:t,col:a,orientation:n}),!0}return!1}isValidPlacement(e,t,a,n){if("horizontal"===n&&a+e.length>10||"vertical"===n&&t+e.length>10)return!1;for(let i=0;i<e.length;i++){if("horizontal"===n&&""!=this.board[t][a+i])return!1;if("vertical"===n&&""!=this.board[t+i][a])return!1}return!0}receiveAttack(e,t){for(const a of this.ships){const{ship:n,row:i,col:r,orientation:s}=a;if("horizontal"===s&&e===i&&t>=r&&t<r+n.length||"vertical"===s&&t===r&&e>=i&&e<i+n.length)return n.hit(),this.board[e][t]="hit",!0}return this.missedAttacks.push({row:e,col:t}),this.board[e][t]="miss",!1}allShipsSunk(){return this.ships.every((e=>e.ship.isSunk()))}}class t{constructor(e){this.length=e,this.num_hits=0,this.is_sunk=!1}hit(){return this.num_hits++,this.num_hits}isSunk(){return this.num_hits===this.length&&(this.is_sunk=!0),this.is_sunk}}class a{constructor(){this.gameboard=new e,this.isTurn=!0}createShip(e){let a=new t(e);return this.gameboard.ships.push(a),a}makeMove(e,t,a){e.receiveAttack(t,a),this.isTurn=!1}}class n{constructor(){this.gameboard=new e,this.previousAttacks=[],this.isTurn=!1}createShips(){let e=[],a=new t(5),n=new t(4),i=new t(3),r=new t(3),s=new t(2);e.push(a),e.push(n),e.push(i),e.push(r),e.push(s);for(let t of Object.values(e)){let e=!1;for(;!e;){let a=Math.floor(10*Math.random()),n=Math.floor(10*Math.random()),i=Math.floor(10*Math.random())%2;if(i=0===i?"horizontal":"vertical",e=this.gameboard.placeShip(t,a,n,i),e)break}}console.log(this.gameboard.ships)}makeMove(e){let t=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());for(;this.hasAttackedBefore(t,a);)t=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());e.receiveAttack(t,a),this.previousAttacks.push({randomRow:t,randomCol:a}),this.isTurn=!1}hasAttackedBefore(e,t){return this.previousAttacks.some((a=>a.row===e&&a.col===t))}}const i=document.getElementsByClassName("gameboard"),r=i[0],s=i[1],l=document.getElementById("header"),o=document.getElementsByClassName("information-message")[0],d=document.getElementById("start-button");d.style.display="none";let h=document.createElement("button");h.id="restart-button",h.innerHTML="Restart Game",h.style.display="none",l.appendChild(h),h.addEventListener("click",(()=>{!function(){for(g=new a,k=new n,k.createShips(),C(g.gameboard,k.gameboard),v=!1,d.style.display="block",h.style.display="none";o.childElementCount>0;)o.removeChild(o.lastElementChild);let e=document.createElement("p");e.innerHTML='Place your ships by selecting them on the left and then clicking on your board. The orientation can be changed by clicking f<br><br>After placing your ships press "Start Game"',o.appendChild(e),Array.from(u).forEach(((e,t)=>{e.className="player-ship-info"}))}()}));const c=document.getElementById("your-turn");c.style.display="none";const m=document.getElementById("enemy-turn");m.style.display="none";const u=document.getElementsByClassName("player-ship-info");let p,y,f="horizontal";const b=document.getElementById("orientation");let g=new a,k=new n;k.createShips();let v=!1;function C(e,t){for(E()&&!v&&(d.style.display="block");r.lastChild;)r.removeChild(r.lastChild);for(;s.lastChild;)s.removeChild(s.lastChild);for(let t=0;t<e.board.length;t++){let a=document.createElement("div");a.className="grid-row";for(let n=0;n<e.board[t].length;n++){let i=document.createElement("div");i.className="grid-square";let r=document.createElement("div");""==e.board[t][n]?r.className="square-identity water":"miss"===e.board[t][n]?r.className="square-identity miss":"hit"===e.board[t][n]?r.className="square-identity hit":r.className="square-identity ship",i.appendChild(r),v||i.addEventListener("click",(()=>{g.gameboard.placeShip(p,t,n,f)&&(y.className="player-ship-info placed",p=null),C(g.gameboard,k.gameboard)})),a.appendChild(i)}r.appendChild(a)}for(let e=0;e<t.board.length;e++){let a=document.createElement("div");a.className="grid-row";for(let n=0;n<t.board[e].length;n++){let i=document.createElement("div");i.className="grid-square";let r=document.createElement("div");""==t.board[e][n]?r.className="square-identity water":"miss"===t.board[e][n]?r.className="square-identity miss":"hit"===t.board[e][n]?r.className="square-identity hit":r.className="square-identity water",i.appendChild(r),v&&g.isTurn&&i.addEventListener("click",(()=>{g.makeMove(k.gameboard,e,n),C(g.gameboard,k.gameboard),k.isTurn=!0,g.isTurn=!1})),a.appendChild(i)}s.appendChild(a)}}function E(){let e=document.getElementById("player-ships").children,t=!0;for(let a=1;a<e.length;a++)if("player-ship-info placed"!=e[a].className){t=!1;break}return t}C(g.gameboard,k.gameboard),d.addEventListener("click",(()=>{E()&&function(){for(v=!0,d.style.display="none";o.childElementCount>0;)o.removeChild(o.lastElementChild);let e=document.createElement("p");e.innerHTML="The game has begun! Click on the computer's gameboard (right) to make your move.<br><br>After making your move the computer will make one in return, the first one to destroy the other's ships wins!",o.appendChild(e),C(g.gameboard,k.gameboard),function e(){k.isTurn?(c.style.display="none",m.style.display="block",k.makeMove(g.gameboard),g.isTurn=!0,C(g.gameboard,k.gameboard)):g.isTurn&&(m.style.display="none",c.style.display="block"),function(){if(g.gameboard.allShipsSunk()){for(console.log("the computer wins!"),v=!1,c.style.display="none",m.style.display="none",h.style.display="block";o.childElementCount>0;)o.removeChild(o.lastElementChild);let e=document.createElement("p");return e.innerHTML='The computer wins!<br><br>Click "Restart Game" to play again!',o.appendChild(e),!0}if(k.gameboard.allShipsSunk()){for(console.log("the player wins!"),v=!1,c.style.display="none",m.style.display="none",h.style.display="block";o.childElementCount>0;)o.removeChild(o.lastElementChild);let e=document.createElement("p");return e.innerHTML='You win!<br><br>Click "Restart Game" to play again!',o.appendChild(e),!0}return!1}()||setTimeout(e,1e3)}()}()})),v||Array.from(u).forEach(((e,a)=>{e.addEventListener("click",(()=>{"player-ship-info placed"!==e.className&&(Array.from(u).forEach((e=>{"player-ship-info placed"!==e.className&&(e.className="player-ship-info")})),e.className="player-ship-info selected",p=new t(u[a].lastElementChild.childElementCount),y=e)}))})),document.addEventListener("keydown",(e=>{if("f"===e.key||"F"===e.key){if("horizontal"===f)return f="vertical",void(b.textContent="Orientation (F): Vertical");if("vertical"===f)return f="horizontal",void(b.textContent="Orientation (F): Horizontal")}}))})();